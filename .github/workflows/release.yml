name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: write
  packages: write

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Get version from tag
      id: get_version
      run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref }}
        name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        generate_release_notes: true
        body: |
          ## ðŸ”¥ Furnace ${{ steps.get_version.outputs.version }}
          
          **Blazingly fast ML inference server powered by Rust and Burn framework**
          
          ## ðŸ“Š Performance
          - **Binary Size**: 2.3MB
          - **Inference Time**: ~0.5ms
          - **Memory Usage**: <50MB
          - **Startup Time**: <100ms
          
          ## ðŸš€ Quick Start
          
          ### Download Binary
          Download the appropriate binary for your platform from the assets below.
          
          ### Using Cargo
          ```bash
          cargo install furnace
          ```
          
          ### Docker
          ```bash
          docker pull ghcr.io/${{ github.repository }}:${{ steps.get_version.outputs.version }}
          ```
          
          ## ðŸ“‹ Full Changelog
          See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for detailed changes.

  build-release:
    name: Build Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            asset_name: furnace-linux-x86_64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            asset_name: furnace-linux-x86_64-musl
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            asset_name: furnace-linux-aarch64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            asset_name: furnace-windows-x86_64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            asset_name: furnace-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            asset_name: furnace-macos-aarch64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Install cross-compilation tools
      if: matrix.target == 'aarch64-unknown-linux-gnu'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu

    - name: Install musl tools
      if: matrix.target == 'x86_64-unknown-linux-musl'
      run: |
        sudo apt-get update
        sudo apt-get install -y musl-tools

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build release binary
      run: cargo build --release --target ${{ matrix.target }} --all-features

    - name: Strip binary (Unix)
      if: matrix.os != 'windows-latest'
      run: strip target/${{ matrix.target }}/release/furnace

    - name: Rename binary
      run: |
        mkdir -p release-assets
        cp target/${{ matrix.target }}/release/furnace${{ matrix.os == 'windows-latest' && '.exe' || '' }} release-assets/${{ matrix.asset_name }}

    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      with:
        files: release-assets/${{ matrix.asset_name }}

  publish-crate:
    name: Publish to crates.io
    needs: [create-release, build-release]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-publish-${{ hashFiles('**/Cargo.lock') }}

    - name: Publish to crates.io
      run: cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }}

  docker-release:
    name: Build and Push Docker Image
    needs: create-release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=tag
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max