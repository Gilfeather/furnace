[package]
name = "furnace"
version = "0.3.0"
edition = "2021"
rust-version = "1.75"
authors = ["Furnace Contributors"]
description = "ðŸ”¥ High-performance Rust ML inference server powered by Burn framework"
documentation = "https://docs.rs/furnace"
homepage = "https://github.com/Gilfeather/furnace"
repository = "https://github.com/Gilfeather/furnace"
license = "MIT"
keywords = ["machine-learning", "inference", "server", "rust", "burn"]
categories = ["web-programming::http-server", "science"]
readme = "README.md"
exclude = [
    ".github/",
    "docs/",
    "*.md",
    ".gitignore",
    ".dockerignore",
    "Dockerfile",
    "deny.toml",
]

[[bin]]
name = "furnace"
path = "src/main.rs"

[[bin]]
name = "create_sample_model"
path = "src/bin/create_sample_model.rs"



[features]
default = ["burn-import"]
wgpu = []
metal = []
cuda = []
burn-import = ["dep:burn-import"]

[dependencies]
# ML Framework
burn = { version = "0.17", features = ["train", "std", "ndarray"] }
burn-import = { version = "0.17", features = ["onnx"], optional = true }
ndarray = "0.16"

# Web Framework
axum = "0.8"
tower = { version = "0.5", features = ["limit"] }
tower-http = { version = "0.6", features = ["cors"] }
tokio = { version = "1.46", features = ["full"] }

# CLI
clap = { version = "4.5", features = ["derive"] }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Logging
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json", "chrono"] }
uuid = { version = "1.0", features = ["v4"] }

# Error Handling
thiserror = "2.0"

# Utilities
chrono = { version = "0.4", features = ["serde"] }

# Benchmarking dependencies
bollard = "0.17"  # Docker API client
plotters = "0.3"  # Chart generation
hdrhistogram = "7.5"  # High-performance histogram for latency metrics
statistical = "1.0"  # Statistical analysis
futures-util = "0.3"  # Async utilities
futures = "0.3"  # Futures executor
toml = "0.8"  # TOML configuration parsing
tempfile = "3.12"  # Temporary file handling
rand = "0.8"  # Random number generation
reqwest = { version = "0.12", features = ["json"] }  # HTTP client

[build-dependencies]
burn-import = { version = "0.17", features = ["onnx"], optional = true }

[dev-dependencies]
# Testing utilities
tempfile = "3.12"
reqwest = { version = "0.12", features = ["json"] }
tower = { version = "0.5", features = ["util"] }

# Benchmarking
criterion = { version = "0.5", features = ["html_reports"] }

# Examples dependencies
rand = "0.8"
ureq = "2.10"
protobuf = "3.4"



[[bench]]
name = "inference_benchmark"
harness = false

[profile.release]
# Maximum performance optimizations
opt-level = 3
lto = "fat"
codegen-units = 1
panic = "abort"
strip = true
debug = false
overflow-checks = false

[profile.release.build-override]
opt-level = 3
codegen-units = 1

[profile.dev]
# Faster compilation for development
opt-level = 0
debug = true
split-debuginfo = "unpacked"

[profile.test]
# Better debugging for tests
opt-level = 0
debug = true

[profile.bench]
# Optimize for benchmarks
opt-level = 3
debug = false
lto = true

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"